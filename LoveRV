val scope = rememberCoroutineScope()
var fileContent by remember { mutableStateOf<String?>(null) }

val launcher = rememberLauncherForActivityResult(
    contract = ActivityResultContracts.OpenDocument(),
    onResult = {uri: Uri? ->
        uri?.let {
            scope.launch(Dispatchers.IO) {
                fileContent = context.contentResolver.openInputStream(uri)
                    ?.bufferedReader()?.use {reader ->
                        reader.readText()
                    }
            }
        }
    }
)

Button(onClick = {
    launcher.launch(arrayOf("text/plain"))
}) {
    Text("Выбрать")
}

fileContent?.let {
    Text(it)
}

val saveLauncher = rememberLauncherForActivityResult(
    contract = ActivityResultContracts.CreateDocument("text/plain"),
    onResult = { uri: Uri? ->
        uri?.let {
            scope.launch(Dispatchers.IO) {
                context.contentResolver.openOutputStream(uri)
                    ?.bufferedWriter()?.use { writer ->
                        writer.write(fileContent)
                    }
            }
        }
    }
)

Button(onClick = {
    saveLauncher.launch("file.txt")
}) {
    Text("Сохранить")
}
